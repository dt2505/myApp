imports:
    - { resource: parameters.yml }
    - { resource: security.yml }
    - { resource: services.yml }
    - { resource: config_sb.yml }

framework:
    #esi:             ~
    translator:      { fallback: "%locale%" }
    secret:          "%secret%"
    router:
        resource: "%kernel.root_dir%/config/routing.yml"
        strict_requirements: ~
    form:            ~
    csrf_protection: ~
    validation:      { enable_annotations: true }
    templating:
        engines: ['twig']
        #assets_version: SomeVersionScheme
    default_locale:  "%locale%"
    trusted_hosts:   ~
    trusted_proxies: ~
    session:
        # handler_id set to null will use default session handler from php.ini
        handler_id:  ~
    fragments:       ~
    http_method_override: true

# Twig Configuration
twig:
    debug:            "%kernel.debug%"
    strict_variables: "%kernel.debug%"

# Assetic Configuration
assetic:
    debug:          "%kernel.debug%"
    use_controller: false
    bundles:        [ ]
    #java: /usr/bin/java
    filters:
        cssrewrite: ~
        #closure:
        #    jar: "%kernel.root_dir%/Resources/java/compiler.jar"
        #yui_css:
        #    jar: "%kernel.root_dir%/Resources/java/yuicompressor-2.4.7.jar"
fos_user:
    db_driver: orm
    firewall_name: main
    use_username_form_type: false
    user_class: SecretBase\AppBundle\Entity\User
    group:
        group_class: SecretBase\AppBundle\Entity\Group

fos_rest:
    routing_loader:
        default_format: html
    param_fetcher_listener: true
    body_listener: true
    format_listener: true
    view:
        view_response_listener: 'force'

sonata_media:
    class:
        media: SecretBase\AppBundle\Entity\Media
        gallery: SecretBase\AppBundle\Entity\DummyGallery
        gallery_has_media: SecretBase\AppBundle\Entity\DummyGalleryHasMedia
    default_context: default
    db_driver: doctrine_orm # or doctrine_mongodb, doctrine_phpcr
    contexts:
        default:  # the default context is mandatory
            download:
                strategy: sonata.media.security.superadmin_strategy
                mode: http
            providers:
                - sonata.media.provider.dailymotion
                - sonata.media.provider.youtube
                - sonata.media.provider.image
                - sonata.media.provider.file
            formats:
                small: { width: 120, height: 74, quality: 100}
                medium: { width: 300, height: 300, quality: 100}
                big:   { width: 600, height: 600, quality: 70}
        user_profile:
            download:
                strategy: sonata.media.security.forbidden_strategy
                mode: http
            providers:
                - sonata.media.provider.image
            formats:
                small: { width: 32, height: 32, quality: 100}
                medium: { width: 60, height: 60, quality: 100}
                large: { width: 160, height: 160, quality: 100}
        user_cover:
            download:
                strategy: sonata.media.security.forbidden_strategy
                mode: http
            providers:
                - sonata.media.provider.image
            formats:
                large: { width: 978, height: 205, quality: 100}
        photo:
            download:
                strategy: sonata.media.security.forbidden_strategy
                mode: http
            providers:
                - sonata.media.provider.image
            formats:
                s1: { width: 600, height: 300, quality: 100}        # status with 1 image
                s2: { width: 300, height: 300, quality: 100}        # status with 2 image
                s3: { width: 200, height: 200, quality: 100}        # status with 3 image
                s4: { width: 150, height: 150, quality: 100}        # status with 4 image
                s5: { width: 120, height: 120, quality: 100}        # status with 5 image
                s6: { width: 100, height: 100, quality: 100}        # status with 6 image
                small: { width: 50, height: 50, quality: 100}
                medium: { width: 240, height: 200, quality: 100}    # display in album list
    cdn:
        server:
            path: /uploads/media
    filesystem:
        local:
            directory:  %kernel.root_dir%/../web/uploads/media
            create:     true
    providers:
        image:
            service:    sonata.media.provider.image
            resizer:    sonata.media.resizer.simple
            filesystem: sonata.media.filesystem.local
            cdn:        sonata.media.cdn.server
            generator:  sonata.media.generator.default
            thumbnail:  sonata.media.thumbnail.format
            allowed_extensions: ['jpg', 'png', 'jpeg', 'gif']
            allowed_mime_types: ['image/pjpeg', 'image/jpeg', 'image/png', 'image/x-png', 'image/gif'] # currently there is no size validation in sonata media bundle so it has to combine with symfony's constraints to achieve this

# Doctrine Configuration
doctrine:
    dbal:
        default_connection: default
        connections:
            default:
                driver:   "%database_driver%"
                host:     "%database_host%"
                port:     "%database_port%"
                dbname:   "%database_name%"
                user:     "%database_user%"
                password: "%database_password%"
                charset:  UTF8
        types:
            json: Sonata\Doctrine\Types\JsonType

    orm:
        default_entity_manager: default
        auto_generate_proxy_classes: "%kernel.debug%"
        entity_managers:
            default:
                connection: default
                mappings:
                    AppBundle: ~
                    SonataMediaBundle: ~

# Swiftmailer Configuration
swiftmailer:
    transport: "%mailer_transport%"
    host:      "%mailer_host%"
    username:  "%mailer_user%"
    password:  "%mailer_password%"
    spool:     { type: memory }
