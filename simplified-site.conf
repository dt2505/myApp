<VirtualHost *:80>
        ServerName my-repository
	DocumentRoot /home/jerry/Project/MyRepository/web/
	<Directory /home/jerry/Project/MyRepository/web/>
		DirectoryIndex app_dev.php
        	AllowOverride None
        	Require all granted
		<IfModule mod_rewrite.c>
			RewriteEngine On
#			RewriteBase /
    #RewriteRule ^app_dev\.php(/(.*)|$) %{CONTEXT_PREFIX}/$2 [R=301,END]
    #RewriteRule ^app\.php(/(.*)|$) %{CONTEXT_PREFIX}/$2 [R=301,L]

    # If the requested filename exists, simply serve it.
    # We only want to let Apache serve files and not directories.
    #RewriteCond %{REQUEST_FILENAME} !-f
    #RewriteRule .? - [END]


    RewriteCond %{REQUEST_FILENAME} !-f
    RewriteRule ^(.*)$ app_dev.php [QSA,END]
    #RewriteRule ^(.*)$ app.php [QSA,END]

    # The following rewrites all other queries to the front controller. The
    # condition ensures that if you are using Apache aliases to do mass virtual
    # hosting, the base path will be prepended to allow proper resolution of the
    # app.php file; it will work in non-aliased environments as well, providing
    # a safe, one-size fits all solution.
    #RewriteCond %{REQUEST_URI}::$1 ^(/.+)(.+)::\2$
    #RewriteRule ^(.*) - [E=BASE:%1]
    #RewriteRule .? %{ENV:BASE}app_dev.php [END]
    #RewriteRule .? %{ENV:BASE}app.php [END]

			# RewriteCond %{REQUEST_URI}::$1 ^(/.+)/(.*)::\2$
			# RewriteRule ^(.*) - [E=BASE:%1]

			# RewriteCond %{ENV:REDIRECT_STATUS} ^$
			# RewriteRule ^app_dev\.php(/(.*)|$) %{ENV:BASE}/$2 [R=301,L]

			# RewriteCond %{REQUEST_FILENAME} -f
			# RewriteRule .? - [L]
			# RewriteRule .? %{ENV:BASE}/app_dev.php [L]
		</IfModule>

#		<IfModule !mod_rewrite.c>
#			<IfModule mod_alias.c>
#				RedirectMatch 302 ^/$ /app_dev.php/
#			</IfModule>
#		</IfModule>
	</Directory>
</VirtualHost>
